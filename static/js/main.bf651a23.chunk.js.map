{"version":3,"sources":["Components/Input.js","Components/Toggle.js","Components/NavBar.js","Components/Card.js","defaultTodo.js","App.js","index.js"],"names":["Input","props","useState","name","setName","onSubmit","event","preventDefault","add","type","value","onChange","e","target","className","class","Toggle","checked","setChecked","useEffect","theme","document","querySelector","setAttribute","onClick","NavBar","Card","isDash","setIsDash","data","delete","id","todos","todo","App","doLists","setDoLists","deleteHandler","prevState","filter","new_value","Math","random","map","list","ReactDOM","render","getElementById"],"mappings":"gTA4BeA,MAxBf,SAAeC,GACd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OACC,8BACC,uBAAMC,SATa,SAACC,GACrBA,EAAMC,iBACO,KAATJ,IACHF,EAAMO,IAAIL,GACVC,EAAQ,MAKR,UACC,uBAAOK,KAAK,OAAOC,MAAOP,EACzBQ,SAAU,SAAAC,GAAC,OAAIR,EAAQQ,EAAEC,OAAOH,QAChCI,UAAU,cACX,wBAAQL,KAAK,SAASM,MAAM,mCAA5B,SACC,mBAAGA,MAAM,0C,YCcCC,MAhCf,SAAgBf,GAEf,MAA8BC,oBAAS,GAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KAeA,OATAC,qBAAU,WACT,IAAMC,EAAQC,SAASC,cAAc,UACjCL,EACHG,EAAMG,aAAa,KAAM,aAEzBH,EAAMG,aAAa,KAAM,eAExB,CAACN,IAGH,qBAAKH,UAAU,QAAf,SACC,qBAAKA,UAAU,SAAf,SACC,yBAAQL,KAAK,SACZM,MAAOE,EAdK,8BADC,+BAgBbO,QAAS,kBAAMN,GAAYD,IAF5B,UAGC,mBAAGH,UAAWG,EAnBD,mBADA,+BAqBZA,EAAU,OAAS,gBCRVQ,MAff,SAAgBxB,GACf,OACC,8BACC,qBAAKa,UAAU,0BAAf,SACC,sBAAKA,UAAU,kBAAf,UACC,oBAAIA,UAAU,UAAd,uBACA,qBAAKA,UAAU,iBAAf,SACC,cAAC,EAAD,cCcSY,G,MAvBF,SAACzB,GAEb,MAA4BC,oBAAS,GAArC,mBAAOyB,EAAP,KAAeC,EAAf,KAKA,OACC,qBAAKJ,QAAS,kBAAMI,GAAWD,IAA/B,SACC,sBAAKb,UAAU,+DAAf,UACC,qBAAKA,UAAU,sBAAf,SACC,qBAAKA,UAAWa,EAAS,iBAAmB,YAA5C,SACE1B,EAAM4B,SAGT,wBAAQL,QAZW,WACrBvB,EAAM6B,OAAO7B,EAAM8B,KAWetB,KAAK,SAASK,UAAU,gCAAxD,SACC,mBAAGA,UAAU,iCCHHkB,EAfD,CACb,CACCC,KAAM,MACNF,GAAI,MAEL,CACCE,KAAM,cACNF,GAAI,MAEL,CACCE,KAAM,QACNF,GAAI,OC0BSG,MA/Bf,WAEE,MAA8BhC,mBAAS8B,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAgB,SAACN,GACrBK,GAAW,SAAAE,GAAS,OAAIA,EAAUC,QAAO,SAAAN,GAAI,OAAIA,EAAKF,KAAOA,SAW/D,OACE,sBAAKjB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,gEAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAON,IAdI,SAACE,GACpB,IAAM8B,EAAY,CAChBP,KAAMvB,EACNqB,GAAIU,KAAKC,UAGXN,GAAW,SAAAE,GAAS,OAAKE,GAAL,mBAAmBF,UAS9BH,EAAQQ,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMf,KAAMe,EAAKX,KAAoBF,GAAIa,EAAKb,GAAID,OAAQO,GAA9BO,EAAKb,kBCvBlEc,IAASC,OAAO,qBAAKhC,UAAU,QAAf,SACd,cAAC,EAAD,MAEEO,SAAS0B,eAAe,W","file":"static/js/main.bf651a23.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Input.css\"\r\n\r\n\r\nfunction Input(props) {\r\n\tconst [name, setName] = useState(\"\")\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tif (name !== \"\") {\r\n\t\t\tprops.add(name)\r\n\t\t\tsetName(\"\")\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input type=\"text\" value={name}\r\n\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\tclassName=\"css-input\" />\r\n\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-sm btn-arrow\">\r\n\t\t\t\t\t<i class=\"bi-arrow-return-left bi-arrow\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Input;","import React, { useEffect, useState } from 'react';\r\nimport \"./Toggle.css\"\r\n\r\nfunction Toggle(props) {\r\n\r\n\tconst [checked, setChecked] = useState(true);\r\n\tconst liteIcon = \"bi bi-brightness-high-fill\"\r\n\tconst darkIcon = \"bi bi-moon-stars\"\r\n\r\n\tconst lightBtn = \"btn btn-outline-light btn-lg\"\r\n\tconst darkBtn = \"btn btn-outline-dark btn-lg\"\r\n\tuseEffect(() => {\r\n\t\tconst theme = document.querySelector(\".theme\")\r\n\t\tif (checked) {\r\n\t\t\ttheme.setAttribute(\"id\", \"lite-mode\")\r\n\t\t} else {\r\n\t\t\ttheme.setAttribute(\"id\", \"dark-mode\")\r\n\t\t}\r\n\t}, [checked])\r\n\r\n\treturn (\r\n\t\t<div className=\"align\">\r\n\t\t\t<div className=\"toggle\">\r\n\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\tclass={checked ? darkBtn : lightBtn}\r\n\t\t\t\t\tonClick={() => setChecked(!checked)}>\r\n\t\t\t\t\t<i className={checked ? darkIcon : liteIcon} ></i>\r\n\t\t\t\t\t{checked ? \"Dark\" : \"Light\"}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Toggle;","import React from 'react';\r\nimport \"./NavBar.css\"\r\nimport Toggle from './Toggle';\r\n\r\nfunction NavBar(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<h1 className=\"nav-txt\">Todo List</h1>\r\n\t\t\t\t\t<div className=\"d-flex ms-auto\">\r\n\t\t\t\t\t\t<Toggle />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport \"./Card.css\"\r\nconst Card = (props) => {\r\n\r\n\tconst [isDash, setIsDash] = useState(false)\r\n\tconst handdleDelete = () => {\r\n\t\tprops.delete(props.id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div onClick={() => setIsDash(!isDash)}>\r\n\t\t\t<div className=\"text-center d-flex align-items-center justify-content-center\">\r\n\t\t\t\t<div className=\"card shadow bg-body\">\r\n\t\t\t\t\t<div className={isDash ? \"card-body dash\" : \"card-body\"}>\r\n\t\t\t\t\t\t{props.data}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={handdleDelete} type=\"button\" className=\"btn btn-danger btn-sm btn-del\">\r\n\t\t\t\t\t<i className=\"bi-trash-fill trash\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;","const todos = [\r\n\t{\r\n\t\ttodo: \"Eat\",\r\n\t\tid: \"01\"\r\n\t},\r\n\t{\r\n\t\ttodo: \"Learn React\",\r\n\t\tid: \"02\"\r\n\t},\r\n\t{\r\n\t\ttodo: \"Sleep\",\r\n\t\tid: \"03\"\r\n\t}\r\n]\r\n\r\nexport default todos","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Input from './Components/Input';\r\nimport NavBar from './Components/NavBar';\r\nimport Card from \"./Components/Card\"\r\nimport todos from './defaultTodo';\r\nfunction App() {\r\n\r\n  const [doLists, setDoLists] = useState(todos)\r\n\r\n  const deleteHandler = (id) => {\r\n    setDoLists(prevState => prevState.filter(todo => todo.id !== id));\r\n  }\r\n\r\n  const inputHandler = (value) => {\r\n    const new_value = {\r\n      todo: value,\r\n      id: Math.random()\r\n    }\r\n\r\n    setDoLists(prevState => [new_value, ...prevState])\r\n  }\r\n  return (\r\n    <div className=\"main\" >\r\n      <NavBar />\r\n      <div className=\"fluid-container row align-items-center justify-content-center\">\r\n        <div className=\"glass text-center\">\r\n          <div className=\"content\">\r\n            <Input add={inputHandler} />\r\n            {doLists.map(list => <Card data={list.todo} key={list.id} id={list.id} delete={deleteHandler} />)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<div className=\"theme\">\r\n  <App />\r\n</div>\r\n  , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}